{"version":3,"sources":["components/Loader/Loader.tsx","components/Loader/PeopleTable.tsx","api.ts","components/PageNavLink.tsx","components/MainNav.tsx","App.tsx","index.tsx"],"names":["Loader","className","PeopleTable","people","selectedName","isSelected","person","slug","map","classNames","to","sex","name","born","died","fatherName","motherName","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PageNavLink","text","isActive","MainNav","role","App","useState","setPeople","PeoplePage","useParams","catch","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.22e176ec.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { Loader } from './Loader';\n\ntype Prop = {\n  people: Person[] | undefined;\n  selectedName: string;\n};\n\nexport const PeopleTable: FC<Prop> = ({ people, selectedName = '' }) => {\n  const isSelected = (person: Person) => person.slug === selectedName;\n\n  return (\n    <Loader /> && (\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n            <tbody>\n              {people?.map((person) => (\n                <tr\n                  key={person.name}\n                  data-cy=\"person\"\n                  className={classNames({\n                    'has-background-warning': isSelected(person),\n                  })}\n                >\n                  <td>\n                    <NavLink\n                      to={`../${person.slug}`}\n                      className={classNames({\n                        'has-text-danger': person.sex === 'f',\n                      })}\n                    >\n                      {person.name}\n                    </NavLink>\n                  </td>\n\n                  <td>{person.sex}</td>\n                  <td>{person.born}</td>\n                  <td>{person.died}</td>\n                  <td>{person.fatherName ? person.fatherName : '-'}</td>\n                  <td>{person.motherName ? person.motherName : '-'}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Prop = {\n  to: string;\n  text: any;\n};\n\nexport const PageNavLink: FC<Prop> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from './PageNavLink';\n\nexport const MainNav = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import './App.scss';\nimport { useState } from 'react';\nimport {\n  Navigate, Route, Routes, useParams,\n} from 'react-router-dom';\nimport { PeopleTable } from './components/Loader/PeopleTable';\nimport { getPeople } from './api';\nimport { Person } from './types';\nimport { MainNav } from './components/MainNav';\n\nexport const App = () => {\n  const [people, setPeople] = useState<Person[]>();\n\n  const PeoplePage = () => {\n    const { slug = '' } = useParams();\n\n    return (\n      <>\n        <h1 className=\"title\">People Page</h1>\n\n        <PeopleTable people={people} selectedName={slug} />\n      </>\n    );\n  };\n\n  getPeople()\n    .then(setPeople)\n    .catch(() => (\n      <>\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n        <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n      </>\n    ));\n\n  return (\n    <div data-cy=\"app\">\n      <MainNav />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\"/people/:slug\" element={<PeoplePage />} />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}